[versions]
kotlin = "2.0.0"
kotlin-coroutines = "1.8.1"
kotlin-serialization = "1.6.3"
kotlin-compile-testing = "1.6.0"
jupiter = "5.10.2"
compose = "1.6.7"
multiplatformSettings = "1.1.1"
kotest = "5.8.0"
android-gradle = "8.0.2"
intellij = "1.15.0"
dokka = "1.8.20"
nexusPublish = "1.1.0"
skie = "0.9.0-RC.1"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
skie = { id = "co.touchlab.skie", version.ref = "skie" }

dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
shadow = { id = "com.github.johnrengelman.shadow", version = "7.1.2" }
swiftpackage = { id = "com.chromaticnoise.multiplatform-swiftpackage", version = "2.0.3" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version = "3.0.3" }
intellij = { id = "org.jetbrains.intellij", version.ref = "intellij" }
gradlepublish = { id = "com.gradle.plugin-publish", version = "1.0.0" }
kotest = { id = "io.kotest.multiplatform", version.ref = "kotest" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

[libraries]
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "android-gradle" }
intellij-gradle-plugin = { module = "org.jetbrains.intellij.plugins:gradle-intellij-plugin", version.ref = "intellij" }
dokka-gradle-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
nexusPublish-plugin = { module = "io.github.gradle-nexus:publish-plugin", version.ref = "nexusPublish" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }

serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlin-serialization" }
serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization" }

compile-testing = { module = "com.github.tschuchortdev:kotlin-compile-testing", version.ref = "kotlin-compile-testing" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "jupiter" }

kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }

compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }

multiplatformSettings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }

[bundles]
kotest-common = ["kotest-assertions-core", "kotest-engine", "kotest-datatest", "kotest-property"]
kotest-jvm = ["kotest-runner-junit5"]
